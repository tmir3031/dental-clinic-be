
plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}

group = "$groupId"
version = "$version"
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testCompileOnly {
        extendsFrom compileOnly
        extendsFrom testAnnotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.commons:commons-email:1.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "com.google.guava:guava:${guava_version}"
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.h2database:h2'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor "com.querydsl:querydsl-apt:${project.property('querydsl.version')}:jpa"

    compileOnly 'org.springframework:spring-context-support'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'com.github.database-rider:rider-spring:1.28.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.springframework.boot:spring-boot-starter-data-jpa'

}

test {
    useJUnitPlatform()
    ignoreFailures Boolean.getBoolean("test.ignoreFailures")
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir("jacoco/html")
    }
}

jar {
    enabled = true
}

wrapper {
    gradleVersion = '6.5'
}